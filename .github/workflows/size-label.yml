name: PR size label
on:
  pull_request_target:

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  size:
    runs-on: ubuntu-latest
    steps:
      - name: Label PR by size
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const THRESHOLDS = [
              { max: 19,   label: "size/XS" },
              { max: 49,   label: "size/S"  },
              { max: 199,  label: "size/M"  },
              { max: 599,  label: "size/L"  },
              { max: 999, label: "size/XL" },
              { max: Infinity, label: "size/XXL" }
            ];
            const COUNT_DELETIONS = true;

            function sizeLabel(total) {
              return THRESHOLDS.find(t => total <= t.max).label;
            }

            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request.number;

            const files = await github.paginate(
              github.rest.pulls.listFiles,
              { owner, repo, pull_number: prNumber, per_page: 100 }
            );

            let total = 0;
            for (const f of files) {
              total += (f.additions || 0);
              if (COUNT_DELETIONS) total += (f.deletions || 0);
            }

            const wanted = sizeLabel(total);

            const pr = context.payload.pull_request;
            const current = (pr.labels || []).map(l => l.name).filter(n => n.startsWith("size/"));
            for (const l of current) {
              if (l !== wanted) {
                await github.rest.issues.removeLabel({ owner, repo, issue_number: prNumber, name: l }).catch(()=>{});
              }
            }

            try {
              await github.rest.issues.addLabels({ owner, repo, issue_number: prNumber, labels: [wanted] });
            } catch (e) {
              throw e;
            }